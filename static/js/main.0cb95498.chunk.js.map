{"version":3,"sources":["logo.svg","FrontPage.js","widgets/SkillCard.js","SkillsPage.js","ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FrontPage","react_default","a","createElement","class","src","href","target","Component","SkillCard","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","image","title","SkillsPage","widgets_SkillCard","ContactPage","action","method","enctype","type","name","placeholder","App","className","src_FrontPage","src_SkillsPage","src_ContactPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cb95498.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass FrontPage extends Component {\n  render() {\n    return (\n      <div class=\"page frontpage\">\n        <div class=\"frontdiv\">\n            <img class=\"mainpic\" src=\"https://cdn.gamerant.com/wp-content/uploads/why-detective-pikachu-pokemon-are-furry.jpg.optimal.jpg\" />\n            <p class=\"mainname\">Sai Sandeep Mutyala</p>\n            <p class=\"maindesc\">Web, Mobile App Developer, and Deep Learning Enthusiast</p>\n            <a href=\"https://github.com/HelioStrike\" target=\"_blank\"><i class=\"mainicon fab fa-github\"></i></a>\n            <a href=\"https://www.linkedin.com/in/sai-sandeep-mutyala-aaa223163/\" target=\"_blank\"><i class=\"mainicon fab fa-linkedin\"></i></a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FrontPage;\n","import React, { Component } from 'react';\n\nclass SkillCard extends Component {\n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n    return (\n      <div class=\"page skillcard\">\n        <img class=\"skillimage\" src={this.props.image} />\n        <p class=\"skilltitle\">{this.props.title}</p>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React, { Component } from 'react';\nimport SkillCard from './widgets/SkillCard';\n\nclass SkillsPage extends Component {\n  render() {\n    return (\n      <div class=\"page skillspage\">\n        <div class=\"niceheader\">Skills</div>\n        <div class=\"page rowholder\">\n            <div class=\"subheading\">Web Development</div>\n            <div class=\"page\">\n                <SkillCard title=\"Node.js\" image=\"https://pluspng.com/img-png/nodejs-logo-png-create-a-model-to-persist-data-in-a-node-js-loopback-api-from-beeman-nl-on-eggheadio-1200.png\"></SkillCard>\n                <SkillCard title=\"React\" image=\"https://www.javascripttuts.com/images/technologies/React.png\"></SkillCard>\n                <SkillCard title=\"Angular\" image=\"http://www.stickpng.com/assets/images/5847ea22cef1014c0b5e4833.png\"></SkillCard>\n                <SkillCard title=\"Php\" image=\"http://www.stickpng.com/assets/images/58481791cef1014c0b5e4994.png\"></SkillCard>\n                <SkillCard title=\"Servlets and JSPs\" image=\"http://algorytmika.com/algorytmika/javax.faces.resource/png/java%20ee.png.xhtml?ln=img\"></SkillCard>\n            </div>\n            <div class=\"subheading\">Mobile Application Development</div>\n            <div class=\"page\">\n                <SkillCard title=\"Android Studio\" image=\"https://ya-webdesign.com/images/android-studio-png.png\"></SkillCard>\n                <SkillCard title=\"React Native\" image=\"https://www.myremoteteam.com/assets/images/misc/react-hexagon.png\"></SkillCard>\n            </div>\n            <div class=\"subheading\">Database Technologies</div>\n            <div class=\"page\">\n                <SkillCard title=\"MySQL\" image=\"http://www.stickpng.com/assets/images/5848104fcef1014c0b5e4950.png\"></SkillCard>\n                <SkillCard title=\"MongoDB\" image=\"https://www.mongodb.com/assets/images/global/leaf.png\"></SkillCard>\n                <SkillCard title=\"Firebase\" image=\"https://cdn.freebiesupply.com/logos/large/2x/firebase-1-logo-png-transparent.png\"></SkillCard>\n            </div>\n            <div class=\"subheading\">Machine Learning</div>\n            <div class=\"page\">\n                <SkillCard title=\"Tensorflow\" image=\"https://planspace.org/20170524-more_and_better_new_tensorflow_apis/img/keras.jpg\"></SkillCard>\n                <SkillCard title=\"Pytorch\" image=\"http://blog.christianperone.com/wp-content/uploads/2018/10/pytorch-logo.png\"></SkillCard>\n            </div>\n            <div class=\"subheading\">Some other stuff</div>\n            <div class=\"page\">\n                <SkillCard title=\"Unity\" image=\"http://www.stickpng.com/assets/images/58482b92cef1014c0b5e4a2d.png\"></SkillCard>\n                <SkillCard title=\"Blender\" image=\"https://download.blender.org/institute/BlenderDesktopLogo.png\"></SkillCard>\n                <SkillCard title=\"Tensorflow.js\" image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/Tensorflow_logo.svg/1200px-Tensorflow_logo.svg.png\"></SkillCard>\n                <SkillCard title=\"AWS\" image=\"https://www.appythings.nl/wp-content/uploads/2018/06/aws-logo-icon-PNG-Transparent-Background.png\"></SkillCard>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillsPage;\n","import React, { Component } from 'react';\n\nclass ContactPage extends Component {\n  render() {\n    return (\n      <div class=\"page contactpage rowholder\">\n        <div class=\"niceheader\">Leave me a mail!</div>\n        <div class=\"mailform\">\n\n          <form class=\"ui form\" action=\"mailto:sandeep.mutyala@outlook.com\" method=\"post\" enctype=\"text/plain\">\n\n            <div class=\"field\">\n              <p class=\"skilltitle\">Name</p>\n              <input type=\"text\" name=\"name\" placeholder=\"Name\"/>\n            </div>\n            <div class=\"field\">\n              <p class=\"skilltitle\">Email</p>\n              <input type=\"text\" name=\"email\" placeholder=\"Email\"/>\n            </div>\n            <div class=\"field\">\n              <p class=\"skilltitle\">Body</p>\n              <textarea type=\"text\" name=\"body\" placeholder=\"Body\"/>\n            </div>\n            <button class=\"ui violet basic button\" type=\"submit\">Submit</button>\n\n          </form>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactPage;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport FrontPage from './FrontPage.js';\nimport SkillsPage from './SkillsPage.js';\nimport ContactPage from './ContactPage.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FrontPage></FrontPage>\n        <SkillsPage></SkillsPage>\n        <ContactPage></ContactPage>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}